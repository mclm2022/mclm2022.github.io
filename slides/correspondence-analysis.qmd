---
title: "Correspondence analysis"
subtitle: "Methods of Corpus Linguistics (class 7)"
author: "Mariana Montes"
format:
  revealjs:
    preview-links: auto
    multiplex: true
    chalkboard:
        buttons: false
    code-fold: true
    css: styles.css
execute:
  echo: true
---

```{r}
#| label: setup
#| include: false
headings <- c("Introduction", "Terminology", "Interpretation", "Linguistic example") 
library(tidyverse)
library(kableExtra)
options(digits = 3)
print_matrix <- function(mtx) {
  k <- kbl(mtx, booktabs = TRUE) %>% 
    kable_classic(full_width = FALSE, font_size = 20)
  if ("Sum" %in% colnames(mtx)) {
    k <- column_spec(k, ncol(mtx)+1, bold = TRUE)
  }
  if ("Sum" %in% rownames(mtx)) {
    k <- row_spec(k, nrow(mtx), bold = TRUE)
  }
  k
}
```

## Outline

```{r}
#| label: outline
#| results: asis
#| echo: false
for (heading in headings) {
  cat("-", heading, "\n")
}
i <- 1
```

## Correspondence Analysis

::: msg
Dimension reduction technique for "count" data.
:::

Visualization: **biplot**, showing relationships:

- between rows

- between columns

- between rows and columns (kind of).

::: {.footer}
`r headings[[i]]`
:::

# `r headings[[i]]`

## Linguistic example

![](trump-clinton-plot.png)

::: {.footer}
`r headings[[i]]`
:::

## Classic (non-linguistic) example^[The `smoke` dataset comes with the `{ca}` package.]

:::: {.columns}

::: {.column width="40%"}
```{r}
#| label: smoke-data
#| code-fold: false
library(tidyverse)
library(mclm)
data(smoke)
print_matrix(smoke)
```
:::

::: {.column width="60%" .incremental .smaller}
- Rows are **types of employees** (Senior/Junior manager, Senior/Junior Employee, Secretary).

- Columns are **types of smokers**.

- Values in the cells are **counts**.

:::

::::

::: {.footer}
`r headings[[i]]`
:::

## Smoke plot

```{r}
#| label: smoke-plot
#| code-fold: false
smoke_ca <- ca(smoke)
plot(smoke_ca)
```

::: {.footer}
`r headings[[i]]`
:::

## Smoke CA

::: {.panel-tabset}

### `print()`

```{r}
#| label: smoke-ca
smoke_ca
```

### `summary()`

```{r}
#| label: smoke-summary
summary(smoke_ca)
```

:::

::: {.footer}
`r headings[[i]]`
:::

```{r}
#| include: false
i <- i+1
```

# `r headings[[i]]`

## Original matrix $N$

$n \times m$ matrix with frequency counts $n_{ij}$

:::: {.columns}

::: {.column width="50%"}
- $n$ = `r nrow(smoke)`
- $m$ = `r length(smoke)`
- $n_{\mathrm{SE, light}}$ = `r smoke["SE", "light"]`
:::

::: {.column width="50%"}
```{r}
#| label: original-matrix
smoke_mtx <- as.matrix(smoke)
print_matrix(smoke_mtx)
```
:::

::::

::: {.footer}
`r headings[[i]]`
:::

## Correspondence matrix $P$

$n \times m$ matrix with overall proportions $p_{ij}$

:::: {.columns}

::: {.column width="35%"}
### Mass

- $p_{\mathrm{SE,light}}$ = `r prop.table(smoke_mtx)["SE", "light"]`

- $p_{\mathrm{SE,.}}$ = `r sum(prop.table(smoke_mtx)["SE",])`

- $p_{\mathrm{.,light}}$ = `r sum(prop.table(smoke_mtx)[, "light"])`
:::
::: {.column width="5%"}
:::
::: {.column width="60%"}
```{r}
#| label: correspondence-matrix
prop.table(smoke_mtx) %>% 
  addmargins() %>% 
  print_matrix()
```
:::

::::

::: {.footer}
`r headings[[i]]`
:::

## Row profiles

$n \times m$ matrix with overall row proportions $r_{ij}$

:::: {.columns}

::: {.column width="50%"}
- $r_{\mathrm{SE,light}}$ = `r prop.table(smoke_mtx, 1)["SE", "light"]`^[Proportion of senior employees that are light smokers.]

- columns are dimensions in the **row points cloud**

- In bold: the **row centroid** (vector of column masses!)

:::
::: {.column width="50%"}
```{r}
#| label: row-profiles-matrix
addmargins(smoke_mtx, 1) %>% 
  prop.table(1) %>% 
  print_matrix()
```
:::

::::

::: {.footer}
`r headings[[i]]`
:::

## What do you mean, row point cloud?

:::: {.columns}

::: {.column width="50%"}
```{r}
#| label: row-cloud
row_cloud <- addmargins(smoke_mtx, 1) %>% prop.table(1) %>% 
  as_tibble(rownames = "Employee") %>%
  mutate(Employee = if_else(Employee == "Sum", "Centroid", Employee))
row_cloud %>% ggplot(aes(x = none, y = light, label = Employee)) +
  geom_text(size = 10) +
  theme_minimal(base_size = 20) +
  annotate("point", x = row_cloud$none[[nrow(row_cloud)]], y = row_cloud$light[[nrow(row_cloud)]], shape = 1, size = 25)
```
:::

::: {.column width="50%"}
- BUT more than two dimensions

- We then compute $\chi^2$ distances instead of euclidean distances

- How far are points from the *centroid*?
:::

::::

::: {.footer}
`r headings[[i]]`
:::

## Column profiles

$n \times m$ matrix with overall row proportions $c_{ij}$

:::: {.columns}

::: {.column width="50%"}
- $c_{\mathrm{SE,light}}$ = `r prop.table(smoke_mtx, 2)["SE", "light"]`^[Proportion of light smokers that are senior employees.]

- rows are dimensions in the **column points cloud**

- In bold: the **column centroid** (vector of row masses!)

:::
::: {.column width="50%"}
```{r}
#| label: col-profiles-matrix
addmargins(smoke_mtx, 2) %>% 
  prop.table(2) %>% 
  print_matrix()
```
:::

::::

::: {.footer}
`r headings[[i]]`
:::

## *Also* a column point cloud?

```{r}
#| label: col-cloud
#| layout-ncol: 2
row_cloud %>% ggplot(aes(x = none, y = light, label = Employee)) +
  geom_text(size = 8) +
  theme_minimal(base_size = 20) +
  annotate("point", x = row_cloud$none[[nrow(row_cloud)]], y = row_cloud$light[[nrow(row_cloud)]], shape = 1, size = 25) +
  labs(title = "Two dimensions of the row cloud.")
col_cloud <- addmargins(smoke_mtx, 2) %>% prop.table(2) %>% 
  t() %>% 
  as_tibble(rownames = "Smoker") %>%
  mutate(Smoker = if_else(Smoker == "Sum", "Centroid", Smoker))
col_cloud %>% ggplot(aes(x = SM, y = SC, label = Smoker)) +
  geom_text(size = 8) +
  theme_minimal(base_size = 20) +
  annotate("point", x = col_cloud$SM[[nrow(col_cloud)]], y = col_cloud$SC[[nrow(col_cloud)]], shape = 1, size = 25) +
  labs(title = "Two dimensions of the column cloud.")
```

::: {.footer}
`r headings[[i]]`
:::


```{r}
#| include: false
i <- i+1
```

# `r headings[[i]]`

## Smoke CA - interpretation

:::: {.columns}

::: {.column width="60%"}
```{r}
#| label: smoke-ca2
#| code-fold: false
smoke_ca
```
:::

::: {.column width="40%"}
```{r}
#| label: smoke-elements
#| code-fold: false
smoke_ca$rowmass
smoke_ca$rowdist
smoke_ca$rowinertia
```
:::

::::

::: {.footer}
`r headings[[i]]`
:::

## Let's look at `rowmass`

```{r}
#| label: profiles
#| layout-ncol: 2
addmargins(smoke_mtx, 1) %>% 
  prop.table(1) %>% 
  print_matrix()

addmargins(smoke_mtx, 2) %>% 
  prop.table(2) %>% 
  print_matrix()
```

```{r}
#| label: masses
#| layout-ncol: 2
#| code-fold: false
smoke_ca$colmass
smoke_ca$rowmass
```

::: {.footer}
`r headings[[i]]`
:::

## Distances (rows) {visibility="hidden"}

:::: {.columns}

::: {.column width="50%"}
### Euclidean

$$\sqrt{\sum_{j=1}^m(r_{ij}-r_{i'j})^2}$$
:::

::: {.column width="50%"}
### Chi-squared ($\chi^2$)
$$\sqrt{\sum_{j=1}^m\frac{(r_{ij}-r_{i'j})^2}{p_{.j}}}$$
:::

::::

$\chi^2$ divides the Euclidean row distance by the mass of the columns: it corrects for the fact that the more data you have, the more variability you can expect.

::: callout-tip
For column distances the computation is equivalent.
:::

::: {.footer}
`r headings[[i]]`
:::

## Let's look at `rowdist`

```{r}
#| label: row-chi-0a
#| code-fold: false
#| layout-ncol: 2
prop.table(smoke_mtx,1)["SM",]
smoke_ca$colmass
```

```{r}
#| label: row-chi-0b
#| code-fold: false
prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass
```

::: {.footer}
`r headings[[i]]`
:::

## Let's look at `rowdist`

```{r}
#| label: row-chi-1a
#| code-fold: false
#| layout-ncol: 2
prop.table(smoke_mtx,1)["SM",]
smoke_ca$colmass
```

```{r}
#| label: row-chi-1b
#| code-fold: false
prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass
(prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass)^2
```

::: {.footer}
`r headings[[i]]`
:::

## Let's look at `rowdist`

```{r}
#| label: row-chi-2a
#| code-fold: false
#| layout-ncol: 2
prop.table(smoke_mtx,1)["SM",]
smoke_ca$colmass
```

```{r}
#| label: row-chi-2b
#| code-fold: false
prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass
(prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass)^2

# Euclidean distance
sqrt(sum((prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass)^2))
```

::: {.footer}
`r headings[[i]]`
:::

## Let's look at `rowdist`

```{r}
#| label: row-chi-3a
#| code-fold: false
#| layout-ncol: 2
prop.table(smoke_mtx,1)["SM",]
smoke_ca$colmass
```

```{r}
#| label: row-chi-3b
#| code-fold: false
prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass
(prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass)^2
(prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass)^2/smoke_ca$colmass

# Chi-squared distance
sqrt(sum((prop.table(smoke_mtx,1)["SM",]-smoke_ca$colmass)^2/smoke_ca$colmass))
```

::: {.footer}
`r headings[[i]]`
:::

## Let's look at `rowdist`

```{r}
#| label: row-dist5
#| code-fold: false
row_dists <- map_dbl(smoke_ca$rownames, function(row) {
  sqrt(sum((prop.table(smoke_mtx,1)[row,]-smoke_ca$colmass)^2/smoke_ca$colmass))
})
row_dists

smoke_ca$rowdist
```

::: {.footer}
`r headings[[i]]`
:::

## Let's look at `rowinertia`

```{r}
#| label: row-dist6
#| code-fold: false
smoke_ca$rowdist

smoke_ca$rowdist ^ 2

smoke_ca$rowdist ^ 2 * smoke_ca$rowmass

smoke_ca$rowinertia
```

::: {.footer}
`r headings[[i]]`
:::

## Reading inertias

:::: {.columns}

::: {.column width="64%"}
```{r}
#| label: smoke-ca3
#| code-fold: false
smoke_ca
```
:::

::: {.column width="36%"}
```{r}
#| label: inertias
#| code-fold: false
sum(smoke_ca$rowinertia)
sum(smoke_ca$colinertia)
```

:::

::::

::: {.footer}
`r headings[[i]]`
:::

## Interpretation of `summary()`

```{r}
#| label: smoke-summary2
#| code-fold: false
smoke_sum <- summary(smoke_ca)
smoke_sum
```

```{r}
#| label: smoke-int
#| code-fold: false
#| layout-ncol: 3
round(smoke_ca$rowmass*1000)
round(smoke_ca$rowinertia/sum(smoke_ca$rowinertia)*1000)
round(smoke_ca$colinertia/sum(smoke_ca$colinertia)*1000)
```

:::

::::

::: {.footer}
`r headings[[i]]`
:::

## Zooming in on rows {.smaller}

```{r}
#| label: row-summary
#| code-fold: false
#| layout: [60, 40]
rows <- summary(smoke_ca)$rows
colnames(rows) <- c("row", "mass", "quality", "inertia",
                    paste0(rep(c("k", "cor", "ctr"), 2), rep(c(1, 2), each = 3)))
rows <- as_tibble(rows)
# left table
rows %>% print_matrix()
# right table
rows %>% select(row, quality, cor1, cor2) %>% 
  mutate(cors = cor1+cor2, qdiff = quality-cors) %>% 
  print_matrix()
```

::: {.footer}
`r headings[[i]]`
:::

## Let's see that plot again?

```{r}
#| label: smoke-plot2
plot(smoke_ca)
```

::: {.footer}
`r headings[[i]]`
:::

## Checking residuals

```{r}
#| label: chisq
#| code-fold: false
smoke_chisq <- chisq.test(smoke)
smoke_chisq
```

:::: {.columns}

::: {.column}
```{r}
#| label: expected
#| code-fold: false
print_matrix(smoke_chisq$expected)
```
:::

::: {.column}
```{r}
#| label: residuals
#| code-fold: false
print_matrix(smoke_chisq$residuals)
```
:::

::::

::: {.footer}
`r headings[[i]]`
:::

```{r}
#| include: false
i <- i+1
```

# `r headings[[i]]`

## Contingency table

```{r}
#| label: tc-setup
# get corpus documents
corpus_folder <- here::here("studies", "_corpora", "clinton_trump")
fnames <- get_fnames(corpus_folder)
short_fnames <- short_names(fnames)
# get possible features
stop_list <- read_types(here::here("studies", "assets", "ca-trump-clinton", "stop_list.txt"))
features <- freqlist(fnames) %>% drop_types(stop_list) %>%
  keep_pos(1:150) %>% as_types()
# create contingency table (a matrix)
d <- map(setNames(fnames, short_fnames), ~ freqlist(.x)[features]) %>%
  bind_cols() %>% data.frame(row.names = features) %>% 
  as.matrix() %>% t() %>% drop_empty_rc()
kbl(d[1:10, 1:10]) %>% kable_paper(font_size = 20)
```

::: {.footer}
`r headings[[i]]`
:::

## Correspondence Analysis {.smaller}

```{r}
#| label: tc-ca
#| code-fold: false
d_ca <- ca(d)
```

::: {.panel-tabset}

### `print()`

```{r}
#| label: tc-ca-print
#| code-fold: false
d_ca
```

### `summary()`

```{r}
#| label: tc-summary
#| code-fold: false
summary(d_ca)
```

:::

::: {.footer}
`r headings[[i]]`
:::

## Basic plot

```{r}
#| label: tc-plot
#| code-fold: false
plot(d_ca)
```

::: {.footer}
`r headings[[i]]`
:::

## Customized plot

```{r}
#| label: tc-ggplot
texts_df <- row_pcoord(d_ca)[,c(1, 2)] %>% 
  as_tibble(rownames = "text") %>% 
  mutate(Subcorpus = re_retrieve_first(fnames, "/clinton_trump/([^/]+)", requested_group = 1))

words_df <- col_pcoord(d_ca)[,c(1, 2)] %>% 
  as_tibble(rownames = "word")

dim_1 <- sprintf("Dimension 1 (%.2f %%)", summary(d_ca)$scree[1,3])
dim_2 <- sprintf("Dimension 2 (%.2f %%)", summary(d_ca)$scree[2,3])

ggplot(words_df, aes(x = V1, y = V2)) +
  geom_text(aes(label = word), color = "gray60") +
  geom_point(data = texts_df, aes(color = Subcorpus)) +
  scale_color_manual(values = c("#0000CD","#DC143C")) +
  geom_hline(yintercept = 0, color = "darkgray") +
  geom_vline(xintercept = 0, color = "darkgray") +
  theme_bw(base_size = 12) +
  labs(x = dim_1, y = dim_2) +
  coord_fixed()
```

::: {.footer}
`r headings[[i]]`
:::

# Next: Factor Analysis