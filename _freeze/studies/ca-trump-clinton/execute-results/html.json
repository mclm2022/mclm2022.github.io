{
  "hash": "c8985745cce2fbc3493050d2a1354923",
  "result": {
    "markdown": "---\ntitle: \"CA applied to the Trump-Clinton speeches\"\nnumber-sections: true\n---\n\n\nThis document illustrates how to use *correspondence analysis* (CA) to investigate the similarities between Clinton speeches and Trump speeches in a corpus that collects them. The approach adopts a bird's-eye perspective, looking at the broad picture we get if we aggregate over a wide range of **features** of the speeches.\n\nA major advantage of the technique is that we can both compare the different documents based on the selected features, but also compare the features based on the documents they occur in and also see which features or groups of features are the ones that account for the most important dissimilarities between the documents.\n\nWe will illustrate four analyses with only minimal differences between each other. In all of them, the workflow consists of collecting frequency lists from each of the files in our corpus and create a matrix with one row per document and one column per type that occurs in the corpus. The cells contain the occurrence frequency: a cell $ij$ will contain the occurrence of type $j$ in the document $i$. Such **matrix of counts** will be given to `ca::ca()`, a function that runs correspondence analysis and returns, among other things, the coordinates of row items and of column items in the principal components as well as the variance covered by each dimension. @sec-code will show the full code to obtain the data and plot it before delving into the actual case studies.\n\nThe difference between the analyses is the definition of the types collected in the frequency lists. @sec-function will select only function words from a predefined list as features, since they have been shown to reliably discriminate between different authors and registers. @sec-content, on the other hand, will rely on high frequency content words by first excluding the types in a stoplist and then only keeping the top 150 items. Finally, @sec-bigrams and @sec-trigrams will use bigrams and trigrams as types, respectively.\n\n# Setup\n\n\n\n\n\n## Activate packages\n\nWe start by activating the R packages we will use, namely `{tidyverse}`, `{mclm}` and, for nice tables when reporting, `{kableExtra}`.\n\n::: callout-note\nWhile we conduct correspondence analysis with `ca::ca()`, we don't need to attach the `{ca}` package separately, since it's already loaded with `{mclm}`.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(mclm)\nlibrary(kableExtra)\n```\n:::\n\n\n## Collect the corpus filenames\n\nFirst, we collect the names of the corpus files and store them in an object called `fnames`. From this we also derive the short filenames (stored in `short_fnames`) and a character vector with, for each filename, the subcorpus (stored in `sub_corp`). The first variable, `short_fnames` is also an `fnames` object and will provide more practical names for plotting. The second variable, `sub_corp` is a character string and will help us assign colors in the plots based on whether the documents correspond to Clinton or Trump speeches. @tbl-fnames illustrates a few of these values.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfnames <- get_fnames(corpus_folder)\nshort_fnames <- short_names(fnames)\nsub_corp <- fnames %>%\n  re_retrieve_first(\"/clinton_trump/([^/]+)\", requested_group = 1)\n```\n:::\n\n::: {#tbl-fnames .cell tbl-cap='Five random filenames and their corresponding values in short_fnames and sub_corp'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> fnames </th>\n   <th style=\"text-align:left;\"> short_fnames </th>\n   <th style=\"text-align:left;\"> sub_corp </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> /Trump/Trump_2016-08-16.txt </td>\n   <td style=\"text-align:left;\"> Trump_2016-08-16 </td>\n   <td style=\"text-align:left;\"> Trump </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> /Trump/Trump_2016-09-06-A.txt </td>\n   <td style=\"text-align:left;\"> Trump_2016-09-06-A </td>\n   <td style=\"text-align:left;\"> Trump </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> /Trump/Trump_2016-11-01-A.txt </td>\n   <td style=\"text-align:left;\"> Trump_2016-11-01-A </td>\n   <td style=\"text-align:left;\"> Trump </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> /Clinton/Clinton_2016-09-29.txt </td>\n   <td style=\"text-align:left;\"> Clinton_2016-09-29 </td>\n   <td style=\"text-align:left;\"> Clinton </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> /Trump/Trump_2016-09-01-A.txt </td>\n   <td style=\"text-align:left;\"> Trump_2016-09-01-A </td>\n   <td style=\"text-align:left;\"> Trump </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## General code {#sec-code}\n\nThe code below will be implemented in each of the case studies below with the only difference in the `freqlist()` call in line 5.\n\n::: callout-tip\nIn practice, if you were to run an analysis where this much code will be used over and over again with multiple modifications, it would be preferable to wrap it in functions. @sec-custom will show you how, if you're interested.\n:::\n\nThe first part of the code builds the matrix that we will apply the correspondence analysis to. This is an object of the data type `matrix` with as its rows the files and as its columns the features, and in the cells the absolute frequencies of the features in the files.\n\nA convenient way in R to incrementally build that dataset, file by file, is to first store the data in a data frame with as its rows the features and as its columns the files. This is convenient, because we will 'grow' the data set file by file, and adding new columns to a data frame is a straigthforward and (in most situations sufficiently) time- and memory-efficient procedure in R. So that's how we will go about. This is what lines 2-8 do in a loop along the filenames.\n\nLines 9-12 turn this dataframe into a matrix, transpose it and drop the rows and columns with only zero frequencies.\n\nIn line 14, we run correspondence analysis on this matrix, which we store in the variable `d_ca`. We could then inspect it by calling `d_ca` or `summary(d_ca)`.\n\nThen, lines 16-21 extract the coordinates of the rows and columns for plotting and create tibbles with the labels, positions and, in the case of the rows, the color coding based on the subcorpora. `mclm::row_pcoord()` and `mclm::col_pcoord()` extract the coordinates of the rows and columns from the object `d_ca`; we are only interested in the first two columns, which are the coordinates of the two first principal components, therefore we add `[,c(1,2)]`. We then turn the matrix into a tibble assigning the column names \"text\" and \"word\" to the rownames, since tibbles don't use rownames. In the case of the documents, we also add the color coding column by creating a column \"Subcorpus\" and filling it with the vector `sub_corp`.\n\nLines 23 and 24 use the variance information from `summary(d_ca)` to enrich the labels of the axes in the plot.\n\nThe rest of the lines create a biplot.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\nd <- data.frame(row.names = features)\nfor (i in seq_along(fnames)) {\n  fname <- fnames[[i]]             # identify i-th filename\n  short_fname <- short_fnames[[i]] # identify i-th short filename\n  flist <- freqlist(fname, ...)    # build frequency list for file\n  flist <- flist[features]         # filter that list to just features\n  d[[short_fname]] <- flist        # add column to d named after filename\n}\nd <- d %>%\n  as.matrix() %>%\n  t() %>%\n  drop_empty_rc()\n\nd_ca <- ca(d)\n\ntexts_df <- row_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"text\") %>% \n  mutate(Subcorpus = sub_corp)\n\nwords_df <- col_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"word\")\n\ndim_1 <- sprintf(\"Dimension 1 (%.2f %%)\", summary(d_ca)$scree[1,3])\ndim_2 <- sprintf(\"Dimension 2 (%.2f %%)\", summary(d_ca)$scree[2,3])\n\nggplot(words_df, aes(x = V1, y = V2)) +\n  geom_text(aes(label = word), col = \"gray60\") +\n  geom_point(data = texts_df, aes(x = V1, y = V2, col = Subcorpus)) +\n  scale_color_manual(values = c(\"#0000CD\",\"#DC143C\")) +\n  geom_hline(yintercept = 0, color = \"darkgray\") +\n  geom_vline(xintercept = 0, color = \"darkgray\") +\n  theme_bw(base_size = 12) +\n  labs(x = dim_1, y = dim_2) +\n  coord_fixed()\n```\n:::\n\n\n::: {.callout-note collapse=\"true\"}\n### Parsing the `ggplot()` call\n\nWhat does each line from 26 to 34 do in the code chunk above?\n\n-   Line 26 calls `ggplot()` with the dataframe of columns (the features), assigning the variables \"V1\" and \"V2\" to the `x` and `y` coordiantes respectively. These are the automatic names given by `as_tibble()` in line 21 when we converted a matrix without column names.\n\n-   Line 27 plots the items of the variable \"word\" (the types of our features) as text, in the color \"gray60\".\n\n-   Line 28 plots the items of the dataframe of rows (documents) as dots, also with \"V1\" and \"V2\" in the axes but moreover with \"Subcorpus\" providing the color aesthetics.\n\n-   Line 29 defines manually the colors to map to the \"Subcorpus\" variable. We could also use a variety of palettes, different colors, or remove the line and use the default color scheme of `{ggplot2}`.\n\n-   Lines 30 and 31 add a horizontal and vertical line respectively, the former where `y = 0` and the latter where `x = 0`, both in dark gray.\n\n-   Line 32 sets the theme and the base size for the font. This only matters aesthetically and could be made different.\n\n-   Line 33 assign the variables `dim_1` and `dim_2`, defined in lines 23 and 24, as the labels of the `x` and `y` axes.\n\n-   Line 34 indicates that the units of both axes should be the same, which is not the default case for `{ggplot2}` plots. The numbers themselves of the coordinates are not meaningful, but the distances between the points are, and they assume that the distance between the point in $(0,1)$ (where $x = 0$ and $y = 1$) and the centroid $(0, 0)$ is the same as the distance between the point $(1,0)$ and the centroid $(0,0)$. `coord_fixed()` makes sure that's the case.\n:::\n\n# Function words as features {#sec-function}\n\nIn a first approach, we use so-called *function words* as features.[Function words include closed word classes such as pronouns, prepositions, auxiliaries, etc., as opposed to so-called *content words* such as nouns, verbs, adjectives...]{.aside} In the field of *stylometry*, which is devoted to the quantitative study of linguistics style (e.g. in support of authorship attribution), it has long been established that function words are a powerful instrument in support of the identification of typical or even unique characteristics of the style of a specific author (or group of authors).\n\n::: callout-note\nZooming in on function words steers the analysis away from differences related to topic/content and foregrounds differences related to style. Using function words by no means is the only way to do this (alternatives are (i) zooming in on longer n-grams, e.g. 3-grams, 4-grams, or, (ii) if the information is available, looking at the frequencies of POS tags or POS tag n-grams, or (iii) looking at derived features such as lexical density, word length, sentence length, etc..\n:::\n\n## Specifying the features\n\nWe start by reading the names of the features for this analysis from the file *function-words.txt* and storing then into an object called `features`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeatures <- read_types(\"assets/ca-trump-clinton/function-words.txt\") %>%\n  print(n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType collection of length 149\n      type\n   -------\n 1   about\n 2  across\n 3 against\n 4   along\n 5  around\n 6      at\n 7  behind\n 8  beside\n 9 besides\n10      by\n...\n```\n:::\n:::\n\n\nAs shown when printing it, the object `features` contains 149 function words.\n\n## Building the file-by-feature matrix\n\nOnce we have collected our features we can create the matrix with one row per document and one column per feature.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- data.frame(row.names = features)\nfor (i in seq_along(fnames)) {\n  fname <- fnames[[i]]\n  short_fname <- short_fnames[[i]]\n  flist <- freqlist(fname)\n  flist <- flist[features]\n  d[[short_fname]] <- flist\n}\nd <- d %>%\n  as.matrix() %>%\n  t() %>%\n  drop_empty_rc()\n```\n:::\n\n\nThe top-left part of the resulting matrix (first ten rows, first ten columns) is shown in @tbl-mtx.\n\n\n::: {#tbl-mtx .cell tbl-cap='First rows and columns of a document-by-feature matrix where the rows are Clinton and Trump speeches and the columns are function words.'}\n\n```{.r .cell-code}\nkbl(d[1:10, 1:10])\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> about </th>\n   <th style=\"text-align:right;\"> across </th>\n   <th style=\"text-align:right;\"> against </th>\n   <th style=\"text-align:right;\"> along </th>\n   <th style=\"text-align:right;\"> around </th>\n   <th style=\"text-align:right;\"> at </th>\n   <th style=\"text-align:right;\"> behind </th>\n   <th style=\"text-align:right;\"> besides </th>\n   <th style=\"text-align:right;\"> by </th>\n   <th style=\"text-align:right;\"> despite </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-07-28 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 26 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-07-29 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-01 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-05 </td>\n   <td style=\"text-align:right;\"> 22 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-10 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-11 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-15 </td>\n   <td style=\"text-align:right;\"> 41 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-16 </td>\n   <td style=\"text-align:right;\"> 16 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-17 </td>\n   <td style=\"text-align:right;\"> 34 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-25 </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n## Running correspondence analysis\n\nThen we run the actual correspondence analysis and store the result in an object called `d_ca`. For reasons of brevity, we will skip the inspection of the summary report of the analysis, which we would normally do with `summary(d_ca)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd_ca <- ca(d)\n# summary(d_ca)\n```\n:::\n\n\n## Biplot\n\nNext, we build the biplot, with color indicating the subcorpus that each file belongs to. First, we prepare the data needed for the plot. If you wanted to inspect the full output of `row_pcoord()` or `col_pcoord()`, you can run them separately first (e.g. `row_pcoord(d_ca) %>% View()`).\n\n@tbl-carows1 shows a random sample from `texts_df`, i.e. the rows of the dataset with their principal component coordinates and the corpus they correspond to. The columns \"V1\" and \"V2\" contain the positions in the first and second dimension respectively.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexts_df <- row_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"text\") %>% \n  mutate(Subcorpus = sub_corp)\nwords_df <- col_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"word\")\n```\n:::\n\n::: {#tbl-carows1 .cell tbl-cap='Subset of rows with principal components.'}\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; width: auto !important; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> text </th>\n   <th style=\"text-align:right;\"> V1 </th>\n   <th style=\"text-align:right;\"> V2 </th>\n   <th style=\"text-align:left;\"> Subcorpus </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-07-28 </td>\n   <td style=\"text-align:right;\"> 0.0579311 </td>\n   <td style=\"text-align:right;\"> -0.2679061 </td>\n   <td style=\"text-align:left;\"> Clinton </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-07-29 </td>\n   <td style=\"text-align:right;\"> -0.1143544 </td>\n   <td style=\"text-align:right;\"> -0.1454011 </td>\n   <td style=\"text-align:left;\"> Clinton </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-01 </td>\n   <td style=\"text-align:right;\"> -0.0449594 </td>\n   <td style=\"text-align:right;\"> -0.3173496 </td>\n   <td style=\"text-align:left;\"> Clinton </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-05 </td>\n   <td style=\"text-align:right;\"> -0.1063086 </td>\n   <td style=\"text-align:right;\"> -0.1732206 </td>\n   <td style=\"text-align:left;\"> Clinton </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-10 </td>\n   <td style=\"text-align:right;\"> -0.0437642 </td>\n   <td style=\"text-align:right;\"> -0.2394833 </td>\n   <td style=\"text-align:left;\"> Clinton </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Clinton_2016-08-11 </td>\n   <td style=\"text-align:right;\"> -0.0171809 </td>\n   <td style=\"text-align:right;\"> -0.2379479 </td>\n   <td style=\"text-align:left;\"> Clinton </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nThen we build the plot, shown in @fig-caplot1. We can see that 16.61% of the variation is covered by the first dimension and 12.99% by the second dimension. In addition, both subcorpora form very clear clusters, mostly divided by the second dimension: features higher on the y-axis are more characteristic of Trump's speeches, and those lower on the y-axis are more characteristic of Clinton's.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim_1 <- sprintf(\"Dimension 1 (%.2f %%)\", summary(d_ca)$scree[1,3])\ndim_2 <- sprintf(\"Dimension 2 (%.2f %%)\", summary(d_ca)$scree[2,3])\n\nggplot(words_df, aes(x = V1, y = V2)) +\n  geom_text(aes(label = word), col = \"gray60\") +\n  geom_point(data = texts_df, aes(x = V1, y = V2, col = Subcorpus)) +\n  scale_color_manual(values = c(\"#0000CD\",\"#DC143C\")) +\n  geom_hline(yintercept = 0, color = \"darkgray\") +\n  geom_vline(xintercept = 0, color = \"darkgray\") +\n  theme_bw(base_size = 12) +\n  labs(x = dim_1, y = dim_2) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![Biplot of correspondence analysis of Clinton and Trump speeches based on function words.](ca-trump-clinton_files/figure-html/fig-caplot1-1.png){#fig-caplot1 fig-alt='Biplot of correspondence analysis of Clinton and Trump speeches based on function words. The dots corresponding to Clinton, in blue, form a group on top of the group of Trump speeches, in red. The features are plotted as text in gray and are all over the place. The axes read \"Dimension 1 (16.61%)\" and \"Dimension 2 (12.99 %)\".' width=672}\n:::\n:::\n\n\n## Typical Clinton features vs. typical Trump features\n\nSince the dimension that sets apart the Clinton speeches (top) most clearly from the Trump speeches (bottom) is the second dimension (y-axis), we may want to inspect the features that occupy extreme positions on the y-axis (and that hence contribute importantly to the y-axis). This is shown in @tbl-extremes1\n\nThe code below selects sorts the dataframe with features information based on their coordinates in the second dimension (\"V2\") and extracts the first 20 elements. @tbl-extremes1-1 has the highest values in the y-axis, i.e. the 20 features most typical of Clinton's speeches, whereas @tbl-extremes1-2 has the lowest values in the y-axis, i.e. the 20features most typical of Trump's speeches.\n\n\n::: {#tbl-extremes1 .cell layout-ncol=\"2\" tbl-cap='Words most characteristic of Clinton\\'s or Trump\\'s speeches.' tbl-subcap='[\"Clinton\",\"Trump\"]'}\n\n```{.r .cell-code}\nwords_df %>%\n  arrange(desc(V2)) %>%\n  head(20) %>%\n  kbl(digits = 3) %>% \n  kable_paper(full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; width: auto !important; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> V1 </th>\n   <th style=\"text-align:right;\"> V2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> anyway </td>\n   <td style=\"text-align:right;\"> -0.316 </td>\n   <td style=\"text-align:right;\"> 0.484 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> little </td>\n   <td style=\"text-align:right;\"> -0.320 </td>\n   <td style=\"text-align:right;\"> 0.386 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> mine </td>\n   <td style=\"text-align:right;\"> -0.301 </td>\n   <td style=\"text-align:right;\"> 0.370 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> they </td>\n   <td style=\"text-align:right;\"> -0.110 </td>\n   <td style=\"text-align:right;\"> 0.357 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> over </td>\n   <td style=\"text-align:right;\"> 0.126 </td>\n   <td style=\"text-align:right;\"> 0.323 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> twice </td>\n   <td style=\"text-align:right;\"> 0.201 </td>\n   <td style=\"text-align:right;\"> 0.307 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> myself </td>\n   <td style=\"text-align:right;\"> -0.289 </td>\n   <td style=\"text-align:right;\"> 0.299 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> second </td>\n   <td style=\"text-align:right;\"> 0.090 </td>\n   <td style=\"text-align:right;\"> 0.286 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> anything </td>\n   <td style=\"text-align:right;\"> -0.065 </td>\n   <td style=\"text-align:right;\"> 0.278 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> though </td>\n   <td style=\"text-align:right;\"> -0.176 </td>\n   <td style=\"text-align:right;\"> 0.273 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> otherwise </td>\n   <td style=\"text-align:right;\"> 0.023 </td>\n   <td style=\"text-align:right;\"> 0.265 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> onto </td>\n   <td style=\"text-align:right;\"> 0.823 </td>\n   <td style=\"text-align:right;\"> 0.265 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> along </td>\n   <td style=\"text-align:right;\"> -0.234 </td>\n   <td style=\"text-align:right;\"> 0.242 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> never </td>\n   <td style=\"text-align:right;\"> 0.074 </td>\n   <td style=\"text-align:right;\"> 0.240 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> such </td>\n   <td style=\"text-align:right;\"> -0.055 </td>\n   <td style=\"text-align:right;\"> 0.236 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> them </td>\n   <td style=\"text-align:right;\"> -0.040 </td>\n   <td style=\"text-align:right;\"> 0.226 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> her </td>\n   <td style=\"text-align:right;\"> 0.244 </td>\n   <td style=\"text-align:right;\"> 0.219 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> two </td>\n   <td style=\"text-align:right;\"> -0.187 </td>\n   <td style=\"text-align:right;\"> 0.207 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> but </td>\n   <td style=\"text-align:right;\"> -0.223 </td>\n   <td style=\"text-align:right;\"> 0.207 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ones </td>\n   <td style=\"text-align:right;\"> 0.330 </td>\n   <td style=\"text-align:right;\"> 0.204 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nwords_df %>%\n  arrange(V2) %>%\n  head(20) %>%\n  kbl(digits = 3) %>% \n  kable_paper(full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; width: auto !important; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> V1 </th>\n   <th style=\"text-align:right;\"> V2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> someone </td>\n   <td style=\"text-align:right;\"> -0.474 </td>\n   <td style=\"text-align:right;\"> -1.477 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> himself </td>\n   <td style=\"text-align:right;\"> -0.570 </td>\n   <td style=\"text-align:right;\"> -1.399 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> toward </td>\n   <td style=\"text-align:right;\"> -0.246 </td>\n   <td style=\"text-align:right;\"> -0.979 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> each </td>\n   <td style=\"text-align:right;\"> 0.181 </td>\n   <td style=\"text-align:right;\"> -0.930 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> shall </td>\n   <td style=\"text-align:right;\"> 0.536 </td>\n   <td style=\"text-align:right;\"> -0.867 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> everyone </td>\n   <td style=\"text-align:right;\"> -0.073 </td>\n   <td style=\"text-align:right;\"> -0.846 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ourselves </td>\n   <td style=\"text-align:right;\"> 0.050 </td>\n   <td style=\"text-align:right;\"> -0.742 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ours </td>\n   <td style=\"text-align:right;\"> 0.650 </td>\n   <td style=\"text-align:right;\"> -0.736 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> his </td>\n   <td style=\"text-align:right;\"> -0.414 </td>\n   <td style=\"text-align:right;\"> -0.726 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> anyone </td>\n   <td style=\"text-align:right;\"> 0.150 </td>\n   <td style=\"text-align:right;\"> -0.687 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> often </td>\n   <td style=\"text-align:right;\"> 0.176 </td>\n   <td style=\"text-align:right;\"> -0.656 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> several </td>\n   <td style=\"text-align:right;\"> 0.512 </td>\n   <td style=\"text-align:right;\"> -0.610 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> own </td>\n   <td style=\"text-align:right;\"> 0.175 </td>\n   <td style=\"text-align:right;\"> -0.527 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> across </td>\n   <td style=\"text-align:right;\"> 0.130 </td>\n   <td style=\"text-align:right;\"> -0.510 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> both </td>\n   <td style=\"text-align:right;\"> -0.068 </td>\n   <td style=\"text-align:right;\"> -0.491 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> sometimes </td>\n   <td style=\"text-align:right;\"> -0.043 </td>\n   <td style=\"text-align:right;\"> -0.470 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> whose </td>\n   <td style=\"text-align:right;\"> 0.523 </td>\n   <td style=\"text-align:right;\"> -0.470 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> may </td>\n   <td style=\"text-align:right;\"> -0.325 </td>\n   <td style=\"text-align:right;\"> -0.422 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> should </td>\n   <td style=\"text-align:right;\"> -0.041 </td>\n   <td style=\"text-align:right;\"> -0.410 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> my </td>\n   <td style=\"text-align:right;\"> -0.047 </td>\n   <td style=\"text-align:right;\"> -0.407 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n# High frequency content words as features {#sec-content}\n\nIn a second approach, we look at *content words* instead. Obviously, then, topic will start playing an important role (although some stylistic differences may still be present in the patterns that emerge). The nature of this analysis is very different to the one shown in @sec-function, and it serves different purposes. Even so, it is a legitimate question whether the Clinton speeches and the Trump speeches turn out to be as clearly separated as in the previous analysis from the perspective of content words. Moreover, we can inspect which (groups of) content words will emerge as the ones that are most characteristic of the different areas in the resulting map.\n\n## Specifying the features\n\nFrom a technical perspective, the only difference with the case study in @sec-function is how we define the features. This time, we build a complete frequency list of the whole corpus, we then remove a number of stop words (mostly function words, but also some undesired types such as `000` and `--`), and finally we treat the top 150 (i.e. the 150 highest frequency items) of the remaining items as our features. The number 150 is an arbitrary choice. We chose it so we could make a fair comparison to the performance of the analysis that used function words.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstop_list <- read_types(\"assets/ca-trump-clinton/stop_list.txt\")\nprint(stop_list, n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType collection of length 154\n     type\n  -------\n1     000\n2   about\n3  across\n4 against\n5   along\n...\n```\n:::\n\n```{.r .cell-code}\nfeatures <- freqlist(fnames) %>%\n  drop_types(stop_list) %>%\n  keep_pos(1:150) %>%\n  as_types() %>%\n  print(n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType collection of length 150\n        type\n   ---------\n 1     again\n 2       ago\n 3      also\n 4   america\n 5  american\n 6 americans\n 7  applause\n 8       are\n 9  audience\n10      back\n...\n```\n:::\n:::\n\n\n## Next steps and plot\n\nThe next steps, all the way up to the creation of the plot, are completely analogous to the previous analysis. @fig-ca2 shows the biplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- data.frame(row.names = features)\nfor (i in seq_along(fnames)) {\n  fname <- fnames[[i]]\n  short_fname <- short_fnames[[i]]\n  flist <- freqlist(fname)\n  flist <- flist[features]\n  d[[short_fname]] <- flist\n}\nd <- d %>%\n  as.matrix() %>%\n  t() %>%\n  drop_empty_rc()\n\nd_ca <- ca(d)\n\ntexts_df <- row_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"text\") %>% \n  mutate(Subcorpus = sub_corp)\n\nwords_df <- col_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"word\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim_1 <- sprintf(\"Dimension 1 (%.2f %%)\", summary(d_ca)$scree[1,3])\ndim_2 <- sprintf(\"Dimension 2 (%.2f %%)\", summary(d_ca)$scree[2,3])\n\nggplot(words_df, aes(x = V1, y = V2)) +\n  geom_text(aes(label = word), col = \"gray60\") +\n  geom_point(data = texts_df, aes(x = V1, y = V2, col = Subcorpus)) +\n  scale_color_manual(values = c(\"#0000CD\",\"#DC143C\")) +\n  geom_hline(yintercept = 0, color = \"darkgray\") +\n  geom_vline(xintercept = 0, color = \"darkgray\") +\n  theme_bw(base_size = 12) +\n  labs(x = dim_1, y = dim_2) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![Biplot of correspondence analysis of Clinton and Trump speeches based on content words.](ca-trump-clinton_files/figure-html/fig-ca2-1.png){#fig-ca2 width=672}\n:::\n:::\n\n\nWe can see that 14.09% of the variation is covered by the first dimension and 10.69% by the second dimension. This time it is the combination of the two dimensions that sets apart the two groups of speeches. This makes it a bit more difficult to select the items on the basis of their co-ordinates. We will do so in a minute, but first, we use a more visual approach. We will demonstrate how we can zoom in on a specific area, if we want to be able to better read the words in that area. This is demonstrated in @fig-ca3 for the region of x-values ranging from `0` to `0.5` and y-values ranging from `-0.5` to `0`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(words_df, aes(x = V1, y = V2)) +\n  geom_text(aes(label = word), col = \"gray60\") +\n  geom_point(data = texts_df, aes(x = V1, y = V2, col = Subcorpus)) +\n  scale_color_manual(values = c(\"#0000CD\",\"#DC143C\")) +\n  geom_hline(yintercept = 0, color = \"darkgray\") +\n  geom_vline(xintercept = 0, color = \"darkgray\") +\n  theme_bw(base_size = 12) +\n  labs(x = dim_1, y = dim_2) +\n  coord_fixed(xlim = c(0, 0.5), ylim = c(-0.5, 0))\n```\n\n::: {.cell-output-display}\n![Biplot of correspondence analysis of Clinton and Trump speeches based on content words, zoomed in for the bottom right quadrant.](ca-trump-clinton_files/figure-html/fig-ca3-1.png){#fig-ca3 width=672}\n:::\n:::\n\n\nIdentifying the same items by co-ordinates can be done by filtering the items based on their values in the x-axis (\"V1\") and y-axis (\"V2\"); the output is shown @tbl-words2:\n\n\n::: {#tbl-words2 .cell tbl-cap='Words from the bottom right quadrant of the biplot with content words as figures.'}\n\n```{.r .cell-code}\nwords_df %>%\n  filter(V1 >= 0 & V1 <= 0.5 & V2 >= -0.5 & V2 <= 0) %>%\n  kbl(digits = 3) %>% \n  kable_paper(full_width = FALSE) %>% \n  scroll_box(height = \"400px\")\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div style=\"border: 1px solid #ddd; padding: 0px; overflow-y: scroll; height:400px; \"><table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; width: auto !important; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;position: sticky; top:0; background-color: #FFFFFF;\"> word </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> V1 </th>\n   <th style=\"text-align:right;position: sticky; top:0; background-color: #FFFFFF;\"> V2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> ago </td>\n   <td style=\"text-align:right;\"> 0.329 </td>\n   <td style=\"text-align:right;\"> -0.030 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> back </td>\n   <td style=\"text-align:right;\"> 0.039 </td>\n   <td style=\"text-align:right;\"> -0.133 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> bad </td>\n   <td style=\"text-align:right;\"> 0.457 </td>\n   <td style=\"text-align:right;\"> -0.113 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> been </td>\n   <td style=\"text-align:right;\"> 0.003 </td>\n   <td style=\"text-align:right;\"> -0.033 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> big </td>\n   <td style=\"text-align:right;\"> 0.156 </td>\n   <td style=\"text-align:right;\"> -0.007 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> build </td>\n   <td style=\"text-align:right;\"> 0.071 </td>\n   <td style=\"text-align:right;\"> -0.179 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> countries </td>\n   <td style=\"text-align:right;\"> 0.160 </td>\n   <td style=\"text-align:right;\"> -0.227 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> deal </td>\n   <td style=\"text-align:right;\"> 0.284 </td>\n   <td style=\"text-align:right;\"> -0.171 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> ever </td>\n   <td style=\"text-align:right;\"> 0.051 </td>\n   <td style=\"text-align:right;\"> -0.251 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> folks </td>\n   <td style=\"text-align:right;\"> 0.347 </td>\n   <td style=\"text-align:right;\"> -0.233 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> four </td>\n   <td style=\"text-align:right;\"> 0.176 </td>\n   <td style=\"text-align:right;\"> -0.284 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> going </td>\n   <td style=\"text-align:right;\"> 0.246 </td>\n   <td style=\"text-align:right;\"> -0.128 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> gonna </td>\n   <td style=\"text-align:right;\"> 0.404 </td>\n   <td style=\"text-align:right;\"> -0.147 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> great </td>\n   <td style=\"text-align:right;\"> 0.175 </td>\n   <td style=\"text-align:right;\"> -0.056 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> happen </td>\n   <td style=\"text-align:right;\"> 0.227 </td>\n   <td style=\"text-align:right;\"> -0.244 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> hillary </td>\n   <td style=\"text-align:right;\"> 0.002 </td>\n   <td style=\"text-align:right;\"> -0.295 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> isis </td>\n   <td style=\"text-align:right;\"> 0.131 </td>\n   <td style=\"text-align:right;\"> -0.047 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> it's </td>\n   <td style=\"text-align:right;\"> 0.213 </td>\n   <td style=\"text-align:right;\"> -0.022 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> love </td>\n   <td style=\"text-align:right;\"> 0.121 </td>\n   <td style=\"text-align:right;\"> -0.003 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> mexico </td>\n   <td style=\"text-align:right;\"> 0.444 </td>\n   <td style=\"text-align:right;\"> -0.276 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> military </td>\n   <td style=\"text-align:right;\"> 0.043 </td>\n   <td style=\"text-align:right;\"> -0.098 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> money </td>\n   <td style=\"text-align:right;\"> 0.323 </td>\n   <td style=\"text-align:right;\"> -0.089 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> obama </td>\n   <td style=\"text-align:right;\"> 0.089 </td>\n   <td style=\"text-align:right;\"> -0.067 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> percent </td>\n   <td style=\"text-align:right;\"> 0.206 </td>\n   <td style=\"text-align:right;\"> -0.420 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> remember </td>\n   <td style=\"text-align:right;\"> 0.067 </td>\n   <td style=\"text-align:right;\"> -0.220 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> seen </td>\n   <td style=\"text-align:right;\"> 0.088 </td>\n   <td style=\"text-align:right;\"> -0.036 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> she </td>\n   <td style=\"text-align:right;\"> 0.209 </td>\n   <td style=\"text-align:right;\"> -0.239 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> she's </td>\n   <td style=\"text-align:right;\"> 0.358 </td>\n   <td style=\"text-align:right;\"> -0.140 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> stop </td>\n   <td style=\"text-align:right;\"> 0.160 </td>\n   <td style=\"text-align:right;\"> -0.335 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> these </td>\n   <td style=\"text-align:right;\"> 0.157 </td>\n   <td style=\"text-align:right;\"> -0.085 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> they're </td>\n   <td style=\"text-align:right;\"> 0.496 </td>\n   <td style=\"text-align:right;\"> -0.013 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> trade </td>\n   <td style=\"text-align:right;\"> 0.275 </td>\n   <td style=\"text-align:right;\"> -0.384 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> trump </td>\n   <td style=\"text-align:right;\"> 0.074 </td>\n   <td style=\"text-align:right;\"> -0.009 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> very </td>\n   <td style=\"text-align:right;\"> 0.181 </td>\n   <td style=\"text-align:right;\"> -0.072 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> wall </td>\n   <td style=\"text-align:right;\"> 0.248 </td>\n   <td style=\"text-align:right;\"> -0.412 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> wants </td>\n   <td style=\"text-align:right;\"> 0.128 </td>\n   <td style=\"text-align:right;\"> -0.156 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we'll </td>\n   <td style=\"text-align:right;\"> 0.200 </td>\n   <td style=\"text-align:right;\"> -0.235 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we're </td>\n   <td style=\"text-align:right;\"> 0.249 </td>\n   <td style=\"text-align:right;\"> -0.111 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> what's </td>\n   <td style=\"text-align:right;\"> 0.339 </td>\n   <td style=\"text-align:right;\"> -0.026 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> win </td>\n   <td style=\"text-align:right;\"> 0.297 </td>\n   <td style=\"text-align:right;\"> -0.264 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> years </td>\n   <td style=\"text-align:right;\"> 0.091 </td>\n   <td style=\"text-align:right;\"> -0.108 </td>\n  </tr>\n</tbody>\n</table></div>\n\n`````\n:::\n:::\n\n\n# High frequency bigrams as features {#sec-bigrams}\n\nIn our third approach, we work with the 150 most frequent bigrams. Notice in the code snippet below how we use the argument `ngram_size = 2` to make sure that `freqlist()` builds a frequency list of bigrams instead of single word forms. Notice also that prior to identifying the top 150, we remove all bigrams with either `applause`, `cheering`, or `--` in them. We do this because in this corpus those items (almost always) are part of the annotation instead of real tokens.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeatures <- fnames %>%\n  freqlist(ngram_size = 2) %>%\n  drop_re(\"(applause|cheering|--)\") %>%\n  keep_bool(ranks(.) <= 150) %>% # or keep_pos(1:150)\n  as_types() %>%\n  print(n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType collection of length 150\n       type\n   --------\n 1  a_great\n 2    a_lot\n 3   a_very\n 4 about_it\n 5   all_of\n 6  all_the\n 7   and_he\n 8    and_i\n 9   and_it\n10 and_it's\n...\n```\n:::\n:::\n\n\nThe rest of the steps again is identical to what it was in the previous analysis, except that when we build frequency lists for each file, we must make sure that here too we build a frequency list of bigrams.\n\n::: callout-tip\nThe step `drop_re(\"(applause|cheering|--)\")` is not necessary here, because bigrams containing `applause`, `cheering`, or `--` are not part of the feature list anyway.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# build file by feature frequency matrix\nd <- data.frame(row.names = features)\nfor (i in seq_along(fnames)) {\n  fname <- fnames[[i]]\n  short_fname <- short_fnames[[i]]\n  flist <- freqlist(fname, ngram_size = 2)\n  flist <- flist[features]\n  d[[short_fname]] <- flist\n}\nd <- d %>%\n  as.matrix() %>%\n  t() %>%\n  drop_empty_rc()\n\n# conduct CA\nd_ca <- ca(d)\n# summary(d_ca)\n\n# preparations for biplot\ntexts_df <- row_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"text\") %>% \n  mutate(Subcorpus = sub_corp)\n\nwords_df <- col_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"word\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim_1 <- sprintf(\"Dimension 1 (%.2f %%)\", summary(d_ca)$scree[1,3])\ndim_2 <- sprintf(\"Dimension 2 (%.2f %%)\", summary(d_ca)$scree[2,3])\n\nggplot(words_df, aes(x = V1, y = V2)) +\n  geom_text(aes(label = word), col = \"gray60\") +\n  geom_point(data = texts_df, aes(x = V1, y = V2, col = Subcorpus)) +\n  scale_color_manual(values = c(\"#0000CD\",\"#DC143C\")) +\n  geom_hline(yintercept = 0, color = \"darkgray\") +\n  geom_vline(xintercept = 0, color = \"darkgray\") +\n  theme_bw(base_size = 12) +\n  labs(x = dim_1, y = dim_2) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![Biplot of correspondence analysis of Clinton and Trump speeches based on frequent bigrams.](ca-trump-clinton_files/figure-html/fig-ca4-1.png){#fig-ca4 width=672}\n:::\n:::\n\n\nWe can see that 14.29% of the variation is covered by the first dimension and 12.50% by the second dimension. Moreover, Clinton's speeches are tightly grouped on the left side of the plot whereas Trump's extend over the right side, so the x-axis is now the relevant dimension. @tbl-extremes2 shows the most characteristic bigrams for each of the authors, identified by having the lowest values in the first dimension (for Clinton's) or the highest values (for Trump's).\n\n\n::: {#tbl-extremes2 .cell layout-ncol=\"2\" tbl-cap='20 most characteristic bigrams of Clinton\\'s or Trump\\'s speeches.' tbl-subcap='[\"Clinton\",\"Trump\"]'}\n\n```{.r .cell-code}\nwords_df %>%\n  arrange(V1) %>%\n  head(20) %>%\n  kbl(digits = 3) %>% \n  kable_paper()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> V1 </th>\n   <th style=\"text-align:right;\"> V2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> what_i </td>\n   <td style=\"text-align:right;\"> -0.863 </td>\n   <td style=\"text-align:right;\"> 0.128 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> i_want </td>\n   <td style=\"text-align:right;\"> -0.789 </td>\n   <td style=\"text-align:right;\"> 0.144 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> that_is </td>\n   <td style=\"text-align:right;\"> -0.701 </td>\n   <td style=\"text-align:right;\"> 0.377 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> you_can </td>\n   <td style=\"text-align:right;\"> -0.639 </td>\n   <td style=\"text-align:right;\"> 0.288 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_can </td>\n   <td style=\"text-align:right;\"> -0.582 </td>\n   <td style=\"text-align:right;\"> 0.356 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> donald_trump </td>\n   <td style=\"text-align:right;\"> -0.578 </td>\n   <td style=\"text-align:right;\"> 0.144 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> i_am </td>\n   <td style=\"text-align:right;\"> -0.578 </td>\n   <td style=\"text-align:right;\"> 0.592 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> got_to </td>\n   <td style=\"text-align:right;\"> -0.545 </td>\n   <td style=\"text-align:right;\"> -0.137 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> i_know </td>\n   <td style=\"text-align:right;\"> -0.529 </td>\n   <td style=\"text-align:right;\"> 0.023 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> to_work </td>\n   <td style=\"text-align:right;\"> -0.527 </td>\n   <td style=\"text-align:right;\"> 0.319 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> if_you </td>\n   <td style=\"text-align:right;\"> -0.503 </td>\n   <td style=\"text-align:right;\"> 0.016 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_need </td>\n   <td style=\"text-align:right;\"> -0.489 </td>\n   <td style=\"text-align:right;\"> 0.116 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> go_to </td>\n   <td style=\"text-align:right;\"> -0.465 </td>\n   <td style=\"text-align:right;\"> -0.019 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> all_the </td>\n   <td style=\"text-align:right;\"> -0.462 </td>\n   <td style=\"text-align:right;\"> 0.240 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> and_that </td>\n   <td style=\"text-align:right;\"> -0.449 </td>\n   <td style=\"text-align:right;\"> 0.281 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> that_we </td>\n   <td style=\"text-align:right;\"> -0.441 </td>\n   <td style=\"text-align:right;\"> 0.248 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> and_he </td>\n   <td style=\"text-align:right;\"> -0.421 </td>\n   <td style=\"text-align:right;\"> -0.225 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> i_was </td>\n   <td style=\"text-align:right;\"> -0.417 </td>\n   <td style=\"text-align:right;\"> -0.098 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> to_say </td>\n   <td style=\"text-align:right;\"> -0.392 </td>\n   <td style=\"text-align:right;\"> -0.006 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> and_i </td>\n   <td style=\"text-align:right;\"> -0.387 </td>\n   <td style=\"text-align:right;\"> -0.046 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nwords_df %>%\n  arrange(desc(V1)) %>%\n  head(20) %>%\n  kbl(digits = 3) %>% \n  kable_paper()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> V1 </th>\n   <th style=\"text-align:right;\"> V2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> trump_trump </td>\n   <td style=\"text-align:right;\"> 0.819 </td>\n   <td style=\"text-align:right;\"> 0.518 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> make_america </td>\n   <td style=\"text-align:right;\"> 0.540 </td>\n   <td style=\"text-align:right;\"> 0.285 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> believe_me </td>\n   <td style=\"text-align:right;\"> 0.512 </td>\n   <td style=\"text-align:right;\"> 0.020 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> to_happen </td>\n   <td style=\"text-align:right;\"> 0.501 </td>\n   <td style=\"text-align:right;\"> -0.148 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_will </td>\n   <td style=\"text-align:right;\"> 0.497 </td>\n   <td style=\"text-align:right;\"> 0.659 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> it's_going </td>\n   <td style=\"text-align:right;\"> 0.486 </td>\n   <td style=\"text-align:right;\"> -0.234 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> you're_going </td>\n   <td style=\"text-align:right;\"> 0.443 </td>\n   <td style=\"text-align:right;\"> -0.490 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> to_win </td>\n   <td style=\"text-align:right;\"> 0.407 </td>\n   <td style=\"text-align:right;\"> -0.255 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> are_going </td>\n   <td style=\"text-align:right;\"> 0.374 </td>\n   <td style=\"text-align:right;\"> 0.026 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> you_thank </td>\n   <td style=\"text-align:right;\"> 0.362 </td>\n   <td style=\"text-align:right;\"> 0.544 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> very_much </td>\n   <td style=\"text-align:right;\"> 0.352 </td>\n   <td style=\"text-align:right;\"> 0.337 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> care_of </td>\n   <td style=\"text-align:right;\"> 0.346 </td>\n   <td style=\"text-align:right;\"> -0.301 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> hillary_clinton </td>\n   <td style=\"text-align:right;\"> 0.344 </td>\n   <td style=\"text-align:right;\"> 0.216 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> not_going </td>\n   <td style=\"text-align:right;\"> 0.329 </td>\n   <td style=\"text-align:right;\"> -0.141 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> this_country </td>\n   <td style=\"text-align:right;\"> 0.307 </td>\n   <td style=\"text-align:right;\"> 0.220 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> will_be </td>\n   <td style=\"text-align:right;\"> 0.305 </td>\n   <td style=\"text-align:right;\"> 0.634 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_don't </td>\n   <td style=\"text-align:right;\"> 0.301 </td>\n   <td style=\"text-align:right;\"> -0.157 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> think_of </td>\n   <td style=\"text-align:right;\"> 0.283 </td>\n   <td style=\"text-align:right;\"> -0.239 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> these_are </td>\n   <td style=\"text-align:right;\"> 0.279 </td>\n   <td style=\"text-align:right;\"> 0.045 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> do_you </td>\n   <td style=\"text-align:right;\"> 0.268 </td>\n   <td style=\"text-align:right;\"> -0.155 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n# High frequency trigrams as features {#sec-trigrams}\n\nIn our fourth approach, we work with the 150 most frequent trigrams; the workflow is the same as in @sec-bigrams, but with `ngram_size = 3` instead of 2. @fig-ca5 shows the biplot.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfeatures <- fnames %>%\n  freqlist(ngram_size = 3) %>%\n  drop_re(\"(applause|cheering|--)\") %>%\n  keep_bool(ranks(.) <= 150) %>%\n  as_types() %>%\n  print(n = 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nType collection of length 150\n                     type\n   ----------------------\n 1            a_couple_of\n 2            a_long_time\n 3               a_lot_of\n 4 a_trump_administration\n 5             all_of_the\n 6             all_of_you\n 7           all_over_the\n 8    america_great_again\n 9             and_by_the\n10    and_hillary_clinton\n...\n```\n:::\n\n```{.r .cell-code}\nd <- data.frame(row.names = features)\nfor (i in seq_along(fnames)) {\n  fname <- fnames[[i]]\n  short_fname <- short_fnames[[i]]\n  flist <- freqlist(fname, ngram_size = 3)\n  flist <- flist[features]\n  d[[short_fname]] <- flist\n}\nd <- d %>%\n  as.matrix() %>%\n  t() %>%\n  drop_empty_rc()\n\nd_ca <- ca(d)\n\ntexts_df <- row_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"text\") %>% \n  mutate(Subcorpus = sub_corp)\n\nwords_df <- col_pcoord(d_ca)[,c(1, 2)] %>% \n  as_tibble(rownames = \"word\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndim_1 <- sprintf(\"Dimension 1 (%.2f %%)\", summary(d_ca)$scree[1,3])\ndim_2 <- sprintf(\"Dimension 2 (%.2f %%)\", summary(d_ca)$scree[2,3])\n\nggplot(words_df, aes(x = V1, y = V2)) +\n  geom_text(aes(label = word), col = \"gray60\") +\n  geom_point(data = texts_df, aes(x = V1, y = V2, col = Subcorpus)) +\n  scale_color_manual(values = c(\"#0000CD\",\"#DC143C\")) +\n  geom_hline(yintercept = 0, color = \"darkgray\") +\n  geom_vline(xintercept = 0, color = \"darkgray\") +\n  theme_bw(base_size = 12) +\n  labs(x = dim_1, y = dim_2) +\n  coord_fixed()\n```\n\n::: {.cell-output-display}\n![Biplot of correspondence analysis of Clinton and Trump speeches based on frequent trigrams.](ca-trump-clinton_files/figure-html/fig-ca5-1.png){#fig-ca5 width=672}\n:::\n:::\n\n\nWe can see that 12.48% of the variation is covered by the first dimension and 8.53% by the second dimension. Moreover, Clinton's speeches are again tightly grouped on the left side of the plot whereas Trump's extend over the right side with an impressive proportion of features, so the x-axis is now the relevant dimension. @tbl-extremes3 shows the most characteristic bigrams for each of the authors, identified by having the lowest values in the first dimension (for Clinton's) or the highest values (for Trump's).\n\n\n::: {#tbl-extremes3 .cell layout-ncol=\"2\" tbl-cap='20 most characteristic bigrams of Clinton\\'s or Trump\\'s speeches.' tbl-subcap='[\"Clinton\",\"Trump\"]'}\n\n```{.r .cell-code}\nwords_df %>%\n  arrange(V1) %>%\n  head(20) %>%\n  kbl(digits = 3) %>% \n  kable_paper()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> V1 </th>\n   <th style=\"text-align:right;\"> V2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> i_want_you </td>\n   <td style=\"text-align:right;\"> -1.769 </td>\n   <td style=\"text-align:right;\"> 0.912 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> to_make_sure </td>\n   <td style=\"text-align:right;\"> -1.509 </td>\n   <td style=\"text-align:right;\"> 0.303 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_need_to </td>\n   <td style=\"text-align:right;\"> -1.490 </td>\n   <td style=\"text-align:right;\"> 0.465 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we've_got_to </td>\n   <td style=\"text-align:right;\"> -1.488 </td>\n   <td style=\"text-align:right;\"> 0.035 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> want_you_to </td>\n   <td style=\"text-align:right;\"> -1.437 </td>\n   <td style=\"text-align:right;\"> 0.850 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> and_i_want </td>\n   <td style=\"text-align:right;\"> -1.310 </td>\n   <td style=\"text-align:right;\"> 0.376 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> want_to_be </td>\n   <td style=\"text-align:right;\"> -1.078 </td>\n   <td style=\"text-align:right;\"> 0.402 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> i_want_to </td>\n   <td style=\"text-align:right;\"> -1.012 </td>\n   <td style=\"text-align:right;\"> 0.060 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> all_of_you </td>\n   <td style=\"text-align:right;\"> -0.920 </td>\n   <td style=\"text-align:right;\"> 0.613 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> want_to_thank </td>\n   <td style=\"text-align:right;\"> -0.819 </td>\n   <td style=\"text-align:right;\"> 0.170 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> be_able_to </td>\n   <td style=\"text-align:right;\"> -0.760 </td>\n   <td style=\"text-align:right;\"> 0.362 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> and_i_think </td>\n   <td style=\"text-align:right;\"> -0.690 </td>\n   <td style=\"text-align:right;\"> -0.188 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> to_tell_you </td>\n   <td style=\"text-align:right;\"> -0.671 </td>\n   <td style=\"text-align:right;\"> 0.082 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> want_to_do </td>\n   <td style=\"text-align:right;\"> -0.664 </td>\n   <td style=\"text-align:right;\"> -0.143 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> and_i_will </td>\n   <td style=\"text-align:right;\"> -0.650 </td>\n   <td style=\"text-align:right;\"> 0.366 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> you_know_i </td>\n   <td style=\"text-align:right;\"> -0.603 </td>\n   <td style=\"text-align:right;\"> -0.439 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> and_i_have </td>\n   <td style=\"text-align:right;\"> -0.598 </td>\n   <td style=\"text-align:right;\"> -0.137 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> out_of_the </td>\n   <td style=\"text-align:right;\"> -0.536 </td>\n   <td style=\"text-align:right;\"> -0.281 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_want_to </td>\n   <td style=\"text-align:right;\"> -0.516 </td>\n   <td style=\"text-align:right;\"> 0.180 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> men_and_women </td>\n   <td style=\"text-align:right;\"> -0.491 </td>\n   <td style=\"text-align:right;\"> 0.750 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\nwords_df %>%\n  arrange(desc(V1)) %>%\n  head(20) %>%\n  kbl(digits = 3) %>% \n  kable_paper()\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\" lightable-paper\" style='font-family: \"Arial Narrow\", arial, helvetica, sans-serif; margin-left: auto; margin-right: auto;'>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> word </th>\n   <th style=\"text-align:right;\"> V1 </th>\n   <th style=\"text-align:right;\"> V2 </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> her_up_lock </td>\n   <td style=\"text-align:right;\"> 0.755 </td>\n   <td style=\"text-align:right;\"> 0.536 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> up_lock_her </td>\n   <td style=\"text-align:right;\"> 0.755 </td>\n   <td style=\"text-align:right;\"> 0.536 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> lock_her_up </td>\n   <td style=\"text-align:right;\"> 0.733 </td>\n   <td style=\"text-align:right;\"> 0.472 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> trump_administration_will </td>\n   <td style=\"text-align:right;\"> 0.715 </td>\n   <td style=\"text-align:right;\"> 0.477 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> a_trump_administration </td>\n   <td style=\"text-align:right;\"> 0.709 </td>\n   <td style=\"text-align:right;\"> 0.463 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> usa_usa_usa </td>\n   <td style=\"text-align:right;\"> 0.668 </td>\n   <td style=\"text-align:right;\"> 0.483 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> will_make_america </td>\n   <td style=\"text-align:right;\"> 0.591 </td>\n   <td style=\"text-align:right;\"> 0.628 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> trump_trump_trump </td>\n   <td style=\"text-align:right;\"> 0.583 </td>\n   <td style=\"text-align:right;\"> 0.565 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> build_the_wall </td>\n   <td style=\"text-align:right;\"> 0.550 </td>\n   <td style=\"text-align:right;\"> 0.322 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_will_make </td>\n   <td style=\"text-align:right;\"> 0.530 </td>\n   <td style=\"text-align:right;\"> 0.658 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> hillary_clinton_wants </td>\n   <td style=\"text-align:right;\"> 0.517 </td>\n   <td style=\"text-align:right;\"> 0.111 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> we_will_also </td>\n   <td style=\"text-align:right;\"> 0.508 </td>\n   <td style=\"text-align:right;\"> 0.802 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> hillary_clinton_is </td>\n   <td style=\"text-align:right;\"> 0.480 </td>\n   <td style=\"text-align:right;\"> 0.471 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> trump_thank_you </td>\n   <td style=\"text-align:right;\"> 0.461 </td>\n   <td style=\"text-align:right;\"> 0.683 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> can_you_imagine </td>\n   <td style=\"text-align:right;\"> 0.425 </td>\n   <td style=\"text-align:right;\"> -0.174 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> to_bring_back </td>\n   <td style=\"text-align:right;\"> 0.423 </td>\n   <td style=\"text-align:right;\"> 0.128 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> going_to_win </td>\n   <td style=\"text-align:right;\"> 0.415 </td>\n   <td style=\"text-align:right;\"> -0.158 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> thank_you_everybody </td>\n   <td style=\"text-align:right;\"> 0.407 </td>\n   <td style=\"text-align:right;\"> 0.300 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> the_middle_east </td>\n   <td style=\"text-align:right;\"> 0.400 </td>\n   <td style=\"text-align:right;\"> 0.576 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> she_wants_to </td>\n   <td style=\"text-align:right;\"> 0.387 </td>\n   <td style=\"text-align:right;\"> -0.198 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nIf you're curious about a specific item, you can use `mclm::conc()` to collect its occurrences. Notice that even infrequent expressions can be typical if they are significantly more frequent in one group of documents than in the other.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nconc(fnames, \"(?xi) i \\\\s+ want \\\\s+ you\") %>% \n  print_kwic(n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nidx                           left|  match   |right                         \n  1 ...ere and around the country,|I want you|to know I've heard you. You...\n  2 ...that way. Well, here's what|I want you|to know. You deserve a pres...\n  3 ...ou what I would do, because|I want you|to hold me accountable, pre...\n  4 ...table twists and turns. But|I want you|to imagine what you will fe...\n  5 ...t ideas out in America. And|I want you|to have a say. And that mea...\n...\n```\n:::\n:::\n\n\n# Extra: writing functions {#sec-custom}\n\nIf you have a lot of code that needs to be run over and over again with minimal modifications, writing a function is a good idea. However, putting *everything* into one overarching function is not always the best solution. Both to facilitate debugging and to give you the opportunity to inspect elements at different stages, you might want to write smaller functions for functional units of code.\n\nOne way of going about this with the code in this document is by writing one function to compile the frequencies, one to preprocess the result for plotting and one to generate the plot.\n\n## Compile frequencies\n\nThe function below, `compile_frequencies()`, takes as arguments the `features`, the `fnames`, the `short_fnames` and the different arguments we want to give to `freqlist()`, since that will change in each case study.\n\nLine 5 creates the empty dataframe with the `features` as rows. Lines 6 through 12 run the for loop across filenames that creates one frequency list per document, filters it by the features and adds them as a column to the dataframe. The `...` in the `freqlist()` call in line 9 provides whatever arguments we have given at the end of `compile_frequencies()` (other than the three main ones), if any, to `freqlist()`. Finally, lines 14 through 17 turn the dataframe into a matrix, transpose it and remove all empty rows and columns. This is what is returned by the function: the output of `compile_frequencies()` is a matrix of frequencies that we can inspect and manipulate as needed, and that would be given to `ca()`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\ncompile_frequencies <- function(features,\n                                fnames,\n                                short_fnames,\n                                ...) {\n  d <- data.frame(row.names = features)\n  for (i in seq_along(fnames)) {\n    fname <- fnames[[i]]\n    short_fname <- short_fnames[[i]]\n    flist <- freqlist(fname, ...)\n    flist <- flist[features]\n    d[[short_fname]] <- flist\n    }\n  \n  d %>%\n    as.matrix() %>%\n    t() %>%\n    drop_empty_rc()\n}\n```\n:::\n\n\n## Obtain coordinates\n\nBy giving the output of `compile_frequencies()` to `ca()`, we obtain a correspondence analysis object that we could call `d_ca`. Next, we might want to write one or two functions to create the small tibbles with the row and column coordinates and the variables for plotting. Here I will show how to create one function `get_coords()` that takes the object `d_ca` and the subcorpora vector and returns a named list with two elements. Alternatively, you could also write two separate functions: one for the rows and one for the columns (the latter wouldn't need the subcorpora vector).\n\nHere, lines 2-4 replicate the `texts_df` definition and lines 6-7, that of `words_df`. Lines 9-12 create and return a named list with both elements.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\nget_coords <- function(d_ca, sub_corp) {\n  texts_df <- row_pcoord(d_ca)[,c(1, 2)] %>% \n    as_tibble(rownames = \"text\") %>% \n    mutate(Subcorpus = sub_corp)\n  \n  words_df <- col_pcoord(d_ca)[,c(1, 2)] %>% \n    as_tibble(rownames = \"word\")\n  \n  list(\n    rows = texts_df,\n    cols = words_df\n  )\n}\n```\n:::\n\n\nIf you wrote two separate functions, you could call them to generate `texts_df` and `words_df` separately. Instead, the output of `get_coords()` will be a list, let's say `ca_coords`, of which the element `ca_coords$rows` will correspond to `texts_df` and `ca_coords$cols` will correspond to `words_df`.\n\n## Plot\n\nFinally, we can write a plotting function that covers everything we need to generate our plot. Such functions are extremely useful when writing papers in which you need to print multiple different plots with similar aesthetic characteristics. Moreover, if you have one function to generate a lot of different plots, i.e. scatterplots for different datasets, and you decide to change the color palette, the background color or the size of the points, you can simply adjust the function, and all the plots generated with it will change in response.\n\nThe function below, `plot_ca()`, takes the result of `get_coords()` and a list with variance data extracted from `summary(d_ca)$scree[,3]`. Lines 2 and 3 take the variance information to include it in the axis labels, later defined in line 12. In lines 5 and 7, what used to be `texts_df` and `words_df` are now `ca_coords$rows` and `ca_coords$cols`, i.e. the elements \"rows\" and \"cols\" from the output of `get_coords()`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\nplot_ca <- function(ca_coords, variances) {\n  dim_1 <- sprintf(\n    \"Dimension 1 (%.2f %%)\",\n    variances[[1]]\n    )\n  dim_2 <- sprintf(\n    \"Dimension 2 (%.2f %%)\",\n    variances[[2]]\n    )\n  \n  ggplot(ca_coords$cols, aes(x = V1, y = V2)) +\n    geom_text(aes(label = word), col = \"gray60\") +\n    geom_point(\n      data = ca_coords$rows,\n      aes(x = V1, y = V2, col = Subcorpus)\n      ) +\n    scale_color_manual(values = c(\"#0000CD\",\"#DC143C\")) +\n    geom_hline(yintercept = 0, color = \"darkgray\") +\n    geom_vline(xintercept = 0, color = \"darkgray\") +\n    theme_bw(base_size = 12) +\n    labs(x = dim_1, y = dim_2) +\n    coord_fixed()\n}\n```\n:::\n\n\n## Example: first case study\n\nWith these functions, the code for the case study in @sec-function (after loading `fnames`, `short_fnames` and `sub_corp`, of course) becomes the one below. After each line, we have a significant unit that we might want to inspect or manipulate.\n\n\n::: {.cell .fig-column-margin}\n\n```{.r .cell-code  code-line-numbers=\"true\"}\nfeatures <- read_types(\"assets/ca-trump-clinton/function-words.txt\")\nd <- compile_frequencies(features, fnames, short_fnames)\nd_ca <- ca(d)\nca_coords <- get_coords(d_ca, sub_corp)\nplot_ca(ca_coords, summary(d_ca)$scree[,3])\n```\n\n::: {.cell-output-display}\n![CA plot with function words as features.](ca-trump-clinton_files/figure-html/fig-redo-1.png){#fig-redo width=672}\n:::\n:::\n\n\n-   Line 1 reads the files with features; after it we can check whether it actually contains the items we wanted.\n\n-   Line 2 creates the matrix of documents by features, and we can inspect it afterwards with something like `d[1:10,1:10]` or `dim(d)`.\n\n-   Line 3 runs the correspondence analysis and we can inspect the output with `d_ca` or `summary(d_ca)`.\n\n-   Line 4 prepares the coordinates for plotting. We can then also check the most extreme features with `head(arrange(ca_coords$cols, desc(V1)))`, for example.\n\n-   Line 5 plots the dots on the components (@fig-redo).\n\n## Full code\n\nThe full code of this document could then be compressed as in the chunk below. Notice that here I have excluded all calls to `print()`, `kbl()` and `kable_paper()`. I have also used different variable names for the different studies instead of overwriting variables, since it can cause problems when you lose track of what is stored as what. Finally, I dedicated a line to define the path to the corpus and one to define the path to the lists of function words and the stoplist.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nassets <- here::here(\"studies\", \"assets\", \"ca-trump-clinton\")\nfnames <- get_fnames(corpus_folder)\nshort_fnames <- short_names(fnames)\nsub_corp <- fnames %>%\n  re_retrieve_first(\n    \"/clinton_trump/([^/]+)\",\n    requested_group = 1\n    )\n\n# First case study ----\nfeatures1 <- read_types(\n  file.path(assets, \"function-words.txt\")\n  )\nd1 <- compile_frequencies(features1, fnames, short_fnames)\nd1[1:10, 1:10]\n\nd_ca1 <- ca(d)\nca_coords1 <- get_coords(d_ca1, sub_corp)\n\nhead(ca_coords1$rows)\nplot_ca(ca_coords1, summary(d_ca1)$scree[,3])\n\n## Inspect extremes ----\narrange(ca_coords1$cols, desc(V2)) %>% head(20)\narrange(ca_coords1$cols, V2) %>% head(20)\n\n# Second case study ----\nstop_list <- read_types(\n  file.path(assets, \"stop_list.txt\")\n)\nfeatures2 <- freqlist(fnames) %>%\n  drop_types(stop_list) %>%\n  keep_bool(ranks(.) <= 150) %>%\n  as_types()\n\nd2 <- compile_frequencies(features2, fnames, short_fnames)\nd_ca2 <- ca(d2)\nca_coords2 <- get_coords(d_ca2, sub_corp)\nplot_ca(ca_coords2, summary(d_ca2)$scree[,3])\n\n## Zoomed-in plot ----\nplot_ca(ca_coords2, summary(d_ca2)$scree[,3]) +\n  coord_fixed(xlim = c(0, 0.5), ylim = c(-0.5, 0))\n\n## Select items ----\nca_coords2$cols %>%\n  filter(V1 >= 0 & V1 <= 0.5 & V2 >= -0.5 & V2 <= 0)\n\n# Third case study ----\nfeatures3 <- fnames %>%\n  freqlist(ngram_size = 2) %>%\n  drop_re(\"(applause|cheering|--)\") %>%\n  keep_bool(ranks(.) <= 150) %>%\n  as_types()\n\nd3 <- compile_frequencies(\n  features3,\n  fnames,\n  short_fnames,\n  ngram_size = 2\n  )\nd_ca3 <- ca(d3)\nca_coords3 <- get_coords(d_ca3, sub_corp)\nplot_ca(ca_coords3, summary(d_ca3)$scree[,3])\n\n## Inspect extremes ----\narrange(ca_coords3$cols, V1) %>% head(20)\narrange(ca_coords3$cols, desc(V1)) %>% head(20)\n\n# Fourth case study ----\nfeatures4 <- fnames %>%\n  freqlist(ngram_size = 3) %>%\n  drop_re(\"(applause|cheering|--)\") %>%\n  keep_bool(ranks(.) <= 150) %>%\n  as_types()\n\nd4 <- compile_frequencies(\n  features4,\n  fnames,\n  short_fnames,\n  ngram_size = 4\n  )\nd_ca4 <- ca(d4)\nca_coords4 <- get_coords(d_ca4, sub_corp)\nplot_ca(ca_coords4, summary(d_ca4)$scree[,])\n\n## Inspect extremes ----\narrange(ca_coords4$cols, V1) %>% head(20)\narrange(ca_coords4$cols, desc(V1)) %>% head(20)\n```\n:::\n",
    "supporting": [
      "ca-trump-clinton_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\r\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}